requestedList = SELECT * FROM FRIENDS JOIN MEMBER ON FOLLOWER=MEMBER_ID JOIN MINIMI_PROFILE_PATH USING(MEMBER_ID) WHERE FOLLOWEE=? AND FRIENDSHIP_NAME=?
requestToList = SELECT * FROM FRIENDS JOIN MEMBER ON FOLLOWEE=MEMBER_ID JOIN MINIMI_PROFILE_PATH USING(MEMBER_ID) WHERE FOLLOWER=? AND FRIENDSHIP_NAME=?
friendsList = SELECT * FROM FRIENDS JOIN MEMBER ON FOLLOWER=MEMBER_ID JOIN MINIMI_PROFILE_PATH USING(MEMBER_ID) WHERE FOLLOWEE=? AND FRIENDSHIP_NAME=?
deleteFriend = DELETE FROM FRIENDS WHERE (FOLLOWEE=? AND FOLLOWER=?) OR (FOLLOWEE=? AND FOLLOWER=?)
acceptFriend = UPDATE FRIENDS SET FRIENDSHIP_NAME=? WHERE FOLLOWEE=? AND FOLLOWER=?
addFollowerRow = INSERT INTO FRIENDS VALUES(?, ?, ?, DEFAULT)
searchList = SELECT * FROM MEMBER LEFT JOIN MINIMI_PROFILE_PATH USING(MEMBER_ID) WHERE MEMBER_NAME LIKE ? AND TO_CHAR(BIRTH_DATE,'YYYY') BETWEEN ? AND ?
resultList1 = SELECT * FROM FRIENDS LEFT JOIN MEMBER ON MEMBER_ID=FOLLOWER LEFT JOIN MINIMI_PROFILE_PATH A ON A.MEMBER_ID=FOLLOWER WHERE FOLLOWEE=? AND FOLLOWER=?
resultList2 = SELECT * FROM MEMBER LEFT JOIN MINIMI_PROFILE_PATH USING(MEMBER_ID) WHERE MEMBER_ID=?
resultList3 = SELECT * FROM FRIENDS LEFT JOIN MEMBER ON MEMBER_ID=FOLLOWEE LEFT JOIN MINIMI_PROFILE_PATH A ON A.MEMBER_ID=FOLLOWEE WHERE FOLLOWEE=? AND FOLLOWER=?
requestTo = INSERT INTO FRIENDS VALUES(?, ?, ?, DEFAULT)
reject = DELETE FROM FRIENDS WHERE FOLLOWEE=? AND FOLLOWER=? AND FRIENDSHIP_NAME=?
cancel = DELETE FROM FRIENDS WHERE FOLLOWEE=? AND FOLLOWER=? AND FRIENDSHIP_NAME=?
requestedFromCount = SELECT COUNT(*) FROM FRIENDS WHERE FOLLOWEE=? AND FRIENDSHIP_NAME=?
newFeedDiary = SELECT * FROM (SELECT ROWNUM RN, T.* FROM (SELECT * FROM DIARY LEFT JOIN DIARY_FOLDER USING(FOLDER_NO) LEFT JOIN MINIMI_PROFILE_PATH A ON (WRITER= A.MEMBER_ID) LEFT JOIN MEMBER B ON (WRITER=B.MEMBER_ID) WHERE SHARE_LEVEL IN ('PUBLIC', 'FOLLOWERS') ORDER BY POST_DATE DESC) T) WHERE RN BETWEEN ? AND ?
newFeedAlbum = SELECT * FROM (SELECT ROWNUM RN, T.* FROM (SELECT * FROM ALBUM LEFT JOIN MINIMI_PROFILE_PATH USING(MEMBER_ID) LEFT JOIN MEMBER USING(MEMBER_ID) WHERE FILEPATH IS NOT NULL ORDER BY POST_DATE DESC)T) WHERE RN BETWEEN ? AND ?
who = SELECT * FROM FRIENDS WHERE FOLLOWEE=? AND FRIENDSHIP_NAME=?
feedAlbumCount = SELECT COUNT(*) FROM (SELECT ROWNUM RN, T.* FROM (SELECT * FROM ALBUM LEFT JOIN MINIMI_PROFILE_PATH USING(MEMBER_ID) LEFT JOIN MEMBER USING(MEMBER_ID))T)
feedDiaryCount = SELECT COUNT(*) FROM (SELECT ROWNUM RN, T.* FROM (SELECT * FROM DIARY LEFT JOIN MINIMI_PROFILE_PATH A ON (WRITER= A.MEMBER_ID) LEFT JOIN MEMBER B ON (WRITER=B.MEMBER_ID)) T)
lastLogDate = UPDATE LAST_LOGEDIN_DATE SET LOGED_DATE=SYSDATE WHERE MEMBER_ID=?
newFeedCountD = SELECT COUNT(*) FROM DIARY WHERE POST_DATE >= (SELECT LOGED_DATE FROM LAST_LOGEDIN_DATE WHERE MEMBER_ID=?)
newFeedCountA = SELECT COUNT(*) FROM ALBUM WHERE POST_DATE >= (SELECT LOGED_DATE FROM LAST_LOGEDIN_DATE WHERE MEMBER_ID=?)
likeList = SELECT * FROM DIARY_LIKE WHERE MEMBER_ID=?
likeListAlbum = SELECT * FROM PHOTO_LIKE WHERE MEMBER_ID=?
ckeckLike = SELECT COUNT(*) FROM DIARY_LIKE WHERE MEMBER_ID=? AND DIARY_NO=?
ckeckLikeAlbum = SELECT COUNT(*) FROM PHOTO_LIKE WHERE MEMBER_ID=? AND IMG_NO=?
like = INSERT INTO DIARY_LIKE VALUES(?, ?)
likeAlbum = INSERT INTO PHOTO_LIKE VALUES(?, ?)
unlike = DELETE FROM DIARY_LIKE WHERE MEMBER_ID=? AND DIARY_NO=?
unlikeAlbum = DELETE FROM PHOTO_LIKE WHERE MEMBER_ID=? AND IMG_NO=?
likeCount = SELECT COUNT(*) FROM DIARY_LIKE WHERE DIARY_NO=?
likeCountAlbum = SELECT COUNT(*) FROM PHOTO_LIKE WHERE IMG_NO=?
count = SELECT DIARY_NO, COUNT(DIARY_NO) AS COUNT FROM DIARY_LIKE GROUP BY DIARY_NO
countAlbum = SELECT IMG_NO, COUNT(IMG_NO) AS COUNT FROM PHOTO_LIKE GROUP BY IMG_NO
accessLog = INSERT INTO FAVORITE VALUES(?, ?, 1, DEFAULT)
accessCount = SELECT COUNT(*) FROM FAVORITE WHERE MEMBER_ID=? AND FRIEND_ID=? AND SYSDATE - VISIT_DATE < 3
myLog = SELECT FRIEND_ID, SUM(VISIT_COUNT) AS COUNT FROM FAVORITE WHERE (SYSDATE-VISIT_DATE < ?) AND MEMBER_ID=? GROUP BY FRIEND_ID ORDER BY COUNT DESC
friendsLog = SELECT MEMBER_ID, SUM(VISIT_COUNT) AS COUNT FROM FAVORITE WHERE (SYSDATE-VISIT_DATE < ?) AND FRIEND_ID=? GROUP BY MEMBER_ID ORDER BY COUNT DESC